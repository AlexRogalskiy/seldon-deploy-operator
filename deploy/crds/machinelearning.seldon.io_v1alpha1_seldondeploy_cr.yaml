apiVersion: machinelearning.seldon.io/v1alpha1
kind: SeldonDeploy
metadata:
  name: example-seldondeploy
  namespace: seldon
spec:
  docker:
    user: unkown
  nodeSelector: {}
  serviceAccountName: seldon-deploy
  imagePullSecrets:
    - name: regcred
  github:
    email: ''
    token: ''
    user: ''
  resources: {}
  enableAppAuth: false
  fullnameOverride: ''
  affinity: {}
  enableAppAnalytics: true
  seldon:
    enabled: true
  prometheus:
    knative:
      url: 'https://prometheus-k8s.openshift-monitoring:9091/api/v1/'
    seldon:
      jwtSecretKey: jwt-elastic.txt
      jwtSecretName: jwt-elastic
      namespaceMetricName: namespace
      resourceMetricsUrl: 'https://prometheus-k8s.openshift-monitoring:9091/api/v1/'
      serviceMetricName: exported_service
      url: 'http://prometheus-operated.seldon:9090/api/v1/'
  virtualService:
    create: true
    gateways:
      - seldon-gateway.istio-system.svc.cluster.local
    prefix: /seldon-deploy/
  external:
    host: ''
    protocol: http
  env:
    GITOPS_FORMAT: json
    USERID_CLAIM_KEY: name
  lite: false
  kfserving:
    enabled: false
    protocol: http
  rbac:
    clusterWide: false
    create: true
  skipVerifyHttpCalls: true
  ingress:
    annotations: {}
    enabled: false
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
  service:
    port: 80
    type: ClusterIP
  replicaCount: 1
  nameOverride: ''
  serviceAccount:
    create: true
  loadtest:
    image:
      repository: seldonio/hey-loadtester
      tag: 0.1
  skipVerifyGit: true
  argocd:
    url: 'https://argocd-server.argocd.svc.cluster.local'
  image:
    pullPolicy: Always
    repository: ryandawsonuk/seldon-deploy
    tag: 0.7.0-dev
  tolerations: []
  elasticsearch:
    jwtSecretKey: jwt-elastic.txt
    jwtSecretName: jwt-elastic
    url: 'https://elasticsearch.openshift-logging:9200'