apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "machinelearning.seldon.io/v1alpha1",
          "kind": "SeldonDeploy",
          "metadata": {
            "name": "example-seldondeploy",
            "namespace": "seldon"
          },
          "spec": {
            "replicaCount": 1,
            "image": {
              "image": "docker.io/seldonio/seldon-deploy-server-ubi:1.0.1-dev",
              "pullPolicy": "Always"
            },
            "loadtest": {
              "image": "seldonio/hey-loadtester-ubi:0.1"
            },
            "alibidetect": {
              "image": "seldonio/alibi-detect-server:1.5.0"
            },
            "nameOverride": "",
            "fullnameOverride": "",
            "service": {
              "type": "ClusterIP",
              "port": 80
            },
            "enableAppAuth": false,
            "enableAppAnalytics": false,
            "env": {
              "USERID_CLAIM_KEY": "name"
            },
            "docker": {
              "user": "unknown"
            },
            "ingress": {
              "enabled": false,
              "annotations": {},
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "350Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "serviceAccount": {
              "create": true
            },
            "gitops": {
              "git": {
                "secret": "git-creds",
                "user": "",
                "email": "",
                "token": "",
                "skipVerifyGit": true,
                "webhook": {
                  "service": {
                    "create": true,
                    "loadBalancerSourceRanges": {}
                  }
                }
              },
              "fileFormat": "json",
              "argocd": {
                "enabled": true
              }
            },
            "batchjobs": {
              "serviceAccount": "workflow",
              "processor": {
                "image": "seldonio/seldon-core-s2i-python37:1.5.0"
              },
              "mc": {
                "image": "minio/mc:latest"
              },
              "pvc": {
                "defaultSize": "1Gi"
              }
            },
            "kfserving": {
              "protocol": "http",
              "enabled": false,
              "curlForm": "MODEL_NAME={{ .ModelName }}<br>\nCLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\nSERVICE_HOSTNAME=$(kubectl get inferenceservice {{ .ModelName }} -o jsonpath='{.status.url}' | cut -d \"/\" -f 3)<br>\ncurl -v -H \"Host: ${SERVICE_HOSTNAME}\" {{ .KfServingProtocol }}://$CLUSTER_IP/v1/models/$MODEL_NAME:predict -d '{{ .Payload }}'\n",
              "requestForm": "{{ .KfServingProtocol }}://{{ .IngressServiceName }}/v1/models/{{ .ModelName }}:predict",
              "explainForm": "{{ .KfServingProtocol }}://{{ .IngressServiceName }}/v1/models/{{ .ModelName }}:explain"
            },
            "seldon": {
              "protocol": "http",
              "enabled": true,
              "curlForm": "CLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\ncurl -k -H \"Content-Type: application/json\" {{ .SeldonProtocol }}://$CLUSTER_IP/seldon/{{ .Namespace }}/{{ .ModelName }}/api/v0.1/predictions -d '{{ .Payload }}'\n",
              "tensorFlowCurlForm": "CLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\ncurl -k -H \"Content-Type: application/json\" {{ .SeldonProtocol }}://$CLUSTER_IP/seldon/{{ .Namespace }}/{{ .ModelName }}/v1/models/:predict -d '{{ .Payload }}'\n",
              "seldonRequestForm": "{{ .SeldonProtocol }}://{{ .IngressServiceName }}/seldon/{{ .Namespace }}/{{ .ModelName }}/api/v0.1/predictions",
              "tensorflowRequestForm": "{{ .SeldonProtocol }}://{{ .IngressServiceName }}/seldon/{{ .Namespace }}/{{ .ModelName }}/v1/models/:predict",
              "explainForm": "http://{{ .ModelName }}-{{ .Predictor }}-explainer.{{ .Namespace }}:9000/v1/models/{{ .ModelName }}:explain"
            },
            "external": {
              "protocol": "http"
            },
            "serviceAccountName": "seldon-deploy",
            "ingressGateway": {
              "seldonIngressService": "istio-ingressgateway",
              "kfServingIngressService": "istio-ingressgateway",
              "ingressNamespace": "istio-system"
            },
            "virtualService": {
              "create": true,
              "prefix": "/seldon-deploy/",
              "gateways": [
                "istio-system/seldon-gateway"
              ]
            },
            "rbac": {
              "create": true,
              "clusterWide": false,
              "readNamespaces": true
            },
            "nodeSelector": {},
            "tolerations": [],
            "affinity": {},
            "skipVerifyHttpCalls": true,
            "prometheus": {
              "seldon": {
                "url": "https://prometheus-user-workload.openshift-user-workload-monitoring:9091/api/v1/",
                "resourceMetricsUrl": "https://prometheus-k8s.openshift-monitoring:9091/api/v1/",
                "namespaceMetricName": "namespace",
                "serviceMetricName": "exported_service",
                "jwtSecretName": "jwt-elastic",
                "jwtSecretKey": "jwt-elastic.txt"
              },
              "knative": {
                "url": "http://prometheus-system-np.knative-monitoring.svc.cluster.local:8080/api/v1/"
              }
            },
            "elasticsearch": {
              "url": "https://elasticsearch.openshift-logging:9200",
              "jwtSecretName": "jwt-elastic",
              "jwtSecretKey": "jwt-elastic.txt"
            },
            "requestLogger": {
              "create": true,
              "image": "docker.io/seldonio/seldon-request-logger:1.5.0",
              "replicas": 1,
              "imagePullPolicy": "IfNotPresent",
              "elasticsearch": {
                "host": "elasticsearch.openshift-logging",
                "port": "9200",
                "protocol": "https",
                "jwtSecretName": "jwt-elastic",
                "jwtSecretKey": "jwt-elastic.txt"
              },
              "namespace": {
                "create": false,
                "name": "seldon-logs"
              },
              "trigger": {
                "apiVersion": "eventing.knative.dev/v1",
                "broker": "default"
              },
              "resources": {
                "limits": {
                  "cpu": "600m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "200Mi"
                }
              }
            },
            "openshiftMarketplace": {
              "cleanupClusterServiceVersions": false,
              "kubectlCleanupImage": "docker.io/seldonio/kubectl:1.14.3",
              "seldonCore": {
                "subscription": {
                  "create": true,
                  "apiVersion": "operators.coreos.com/v1alpha1",
                  "channel": "alpha",
                  "metricsPath": "/metrics",
                  "istioEnabled": true,
                  "requestLoggerEndpoint": "http://default-broker.seldon-logs"
                },
                "istioGateway": {
                  "create": true,
                  "name": "seldon-gateway",
                  "namespace": "istio-system"
                }
              },
              "prometheus": {
                "monitorSpecs": {
                  "create": true
                }
              }
            }
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: AI/Machine Learning
    certified: "false"
    containerImage: seldonio/seldon-deploy-operator:1.0.0
    operators.operatorframework.io/builder: operator-sdk-v1.2.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: seldon-deploy-operator.v1.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: A seldon deployapplication
        displayName: Seldon Delpoyment
        kind: SeldonDeploy
        name: seldondeploys.machinelearning.seldon.io
        resources:
          - kind: SeldonDeploy
            name: seldondeploys.machinelearning.seldon.io
            version: v1alpha1
          - kind: Deployment
            name: ""
            version: v1
          - kind: ConfigMap
            name: ""
            version: v1
          - kind: Service
            name: ""
            version: v1
          - kind: ReplicaSet
            name: ""
            version: v1
          - kind: Pod
            name: ""
            version: v1
          - kind: Secret
            name: ""
            version: v1
          - kind: ClusterRole
            name: ""
            version: v1
          - kind: Role
            name: ""
            version: v1
          - kind: RoleBinding
            name: ""
            version: v1
          - kind: ServiceAccount
            name: ""
            version: v1
          - kind: ClusterRoleBinding
            name: ""
            version: v1
        specDescriptors:
          - description: kfserving active
            displayName: kfserving
            path: kfserving
          - description: resources
            displayName: resources
            path: rsources
          - description: ingressGateway
            displayName: ingressGateway
            path: ingressGateway
          - description: virtualService
            displayName: virtualService
            path: virtualService
          - description: Environment vars to add
            displayName: env
            path: env
          - description: imagePullSecrets
            displayName: imagePullSecrets
            path: imagePullSecrets
          - description: nameOverride
            displayName: nameOverride
            path: nameOverride
          - description: prometheus
            displayName: prometheus
            path: prometheus
          - description: skipVerifyHttpCalls
            displayName: skipVerifyHttpCalls
            path: skipVerifyHttpCalls
          - description: enableAppAuth
            displayName: enableAppAuth
            path: enableAppAuth
          - description: external
            displayName: external
            path: external
          - description: loadtest
            displayName: loadtest
            path: loadtest
          - description: alibidetect
            displayName: alibidetect
            path: alibidetect
          - description: ingress
            displayName: ingress
            path: ingress
          - description: lite
            displayName: lite
            path: lite
          - description: batchjobs
            displayName: batchjobs
            path: batchjobs
          - description: tolerations
            displayName: tolerations
            path: tolerations
          - description: serviceAccountName
            displayName: serviceAccountName
            path: serviceAccountName
          - description: argocd
            displayName: argocd
            path: argocd
          - description: elasticsearch
            displayName: elasticsearch
            path: elasticsearch
          - description: fullnameOverride
            displayName: fullnameOverride
            path: fullnameOverride
          - description: resources
            displayName: resources
            path: resources
          - description: seldon
            displayName: seldon
            path: seldon
          - description: replicaCount
            displayName: replicaCount
            path: replicaCount
          - description: skipVerifyGit
            displayName: skipVerifyGit
            path: skipVerifyGit
          - description: affinity
            displayName: affinity
            path: affinity
          - description: enableAppAnalytics
            displayName: enableAppAnalytics
            path: enableAppAnalytics
          - description: github
            displayName: github
            path: github
          - description: image
            displayName: image
            path: image
          - description: nodeSelector
            displayName: nodeSelector
            path: nodeSelector
          - description: rbac
            displayName: rbac
            path: rbac
          - description: service
            displayName: service
            path: service
          - description: serviceAccount
            displayName: serviceAccount
            path: serviceAccount
          - description: docker
            displayName: docker
            path: docker
          - description: openshiftMarketplace
            displayName: openshiftMarketplace
            path: openshiftMarketplace
        statusDescriptors:
          - description: conditions
            displayName: conditions
            path: conditions
          - description: deploy version released
            displayName: deployedRelease
            path: deployedRelease
        version: v1alpha1
  description: The Seldon deploy operator allows the creation of Seldon Deploy applications to provide management, monitoring and updating of machine learning models from a range of technologies. It includes the ability to run explanations as well as outlier, drift and adversarial detection against running models. There is a full metrics and logging integration via Prometheus and ELK stacks as well as full GitOps operations to allow full auditing and recovery of updated models.
  displayName: Seldon Deploy Operator
  icon:
    - base64data: ""
      mediatype: ""
  install:
    spec:
      deployments: []
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - machine learning
    - deployment
  links:
    - name: Website
      url: https://www.seldon.io/
    - name: Documentation
      url: https://deploy.seldon.io
  maintainers:
    - email: hello@seldon.io
      name: Seldon Technologies
  maturity: alpha
  provider:
    name: seldon
  version: 1.0.0
