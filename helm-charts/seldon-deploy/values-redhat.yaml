
replicaCount: 1

image:
  repository: seldonio/seldon-deploy
  tag: 0.0.0
  pullPolicy: Always

loadtest:
  image:
    repository: seldonio/hey-loadtester
    tag: 0.1

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

# boolean to enable app-level auth (defaults to "false")
enableAppAuth: false

# boolean to enable app-analytics (defaults to "true")
enableAppAnalytics: true

env:
  GITOPS_FORMAT: "json"
  USERID_CLAIM_KEY: "name" # claim to be used as userid (defaults to "preferred_username")
  # if using app level auth then set below env vars
  # OIDC_PROVIDER oidc providerURL
  # CLIENT_ID oidc client ID
  # CLIENT_SECRET oidc client secret
  # REDIRECT_URL  `${oidc_redirect_url}/seldon-deploy/auth/callback`
  # OIDC_SCOPES oidc scopes (defaults to "profile email groups")
  # if enableAppAnalytics enabled use token
  # APP_ANALYTICS_TOKEN: ""

docker:
  user: "unkown"

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

serviceAccount:
  create: true

github:
  user: ""
  token: ""
  email: ""

kfserving:
  protocol: "http"
  enabled: false

seldon:
  enabled: true

external:
  protocol: "http"
  host: ""


serviceAccountName: seldon-deploy

virtualService:
  create: true
  prefix: "/seldon-deploy/"
  gateways:
    - seldon-gateway.istio-system.svc.cluster.local

rbac:
  create: true
  clusterWide: false

nodeSelector: {}

tolerations: []

affinity: {}

imagePullSecrets:
  - name: regcred

skipVerifyGit: true
skipVerifyHttpCalls: true


prometheus:
  seldon:
    url: "http://prometheus-operated.seldon:9090/api/v1/"
    # resource metrics may come from different prometheus than req metrics - set only if different
    resourceMetricsUrl: "https://prometheus-k8s.openshift-monitoring:9091/api/v1/"
    # see https://github.com/openshift/cluster-monitoring-operator/issues/768
    namespaceMetricName: "namespace"
    serviceMetricName: "exported_service"
    #leave below empty/commented for prom without token-based auth
    #basic auth can be handled by putting user:pass in url.
    jwtSecretName: "jwt-elastic"
    jwtSecretKey: "jwt-elastic.txt"
  knative:
    url: "http://prometheus-system-np.knative-monitoring.svc.cluster.local:8080/api/v1/"


elasticsearch:
  url: "https://elasticsearch.openshift-logging:9200"
  #leave below empty/commented for elastic without token-based auth
  #basic auth can be handled by putting user:pass in urls.elasticsearch
  jwtSecretName: "jwt-elastic"
  jwtSecretKey: "jwt-elastic.txt"

argocd:
  url: "https://argocd-server.argocd.svc.cluster.local"

lite: false
